[{"/Users/christianpickett/Documents/wco-cast/src/App.js":"1","/Users/christianpickett/Documents/wco-cast/src/index.js":"2","/Users/christianpickett/Documents/wco-cast/src/api/api.js":"3","/Users/christianpickett/Documents/wco-cast/src/reportWebVitals.js":"4","/Users/christianpickett/Documents/wco-cast/src/components/Stream.js":"5","/Users/christianpickett/Documents/wco-cast/src/components/Cartoons.js":"6","/Users/christianpickett/Documents/wco-cast/src/components/Dubbed.js":"7","/Users/christianpickett/Documents/wco-cast/src/components/Show.js":"8","/Users/christianpickett/Documents/wco-cast/src/components/Episode.js":"9","/Users/christianpickett/Documents/wco-cast/src/components/Subbed.js":"10"},{"size":267,"mtime":1609060729813,"results":"11","hashOfConfig":"12"},{"size":530,"mtime":1609045680309,"results":"13","hashOfConfig":"12"},{"size":133,"mtime":1609206414911,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1609042100662,"results":"15","hashOfConfig":"12"},{"size":3092,"mtime":1609211035824,"results":"16","hashOfConfig":"12"},{"size":1784,"mtime":1609070876737,"results":"17","hashOfConfig":"12"},{"size":1785,"mtime":1609070852239,"results":"18","hashOfConfig":"12"},{"size":2942,"mtime":1609211109779,"results":"19","hashOfConfig":"12"},{"size":2652,"mtime":1609214603701,"results":"20","hashOfConfig":"12"},{"size":1785,"mtime":1609070869781,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l91olz",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},"/Users/christianpickett/Documents/wco-cast/src/App.js",[],"/Users/christianpickett/Documents/wco-cast/src/index.js",[],["47","48"],"/Users/christianpickett/Documents/wco-cast/src/api/api.js",[],"/Users/christianpickett/Documents/wco-cast/src/reportWebVitals.js",[],["49","50"],"/Users/christianpickett/Documents/wco-cast/src/components/Stream.js",[],"/Users/christianpickett/Documents/wco-cast/src/components/Cartoons.js",["51","52"],"import { List, Spin } from 'antd';\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport API from '../api/api';\n\nconst Cartoons = ({ search, setSearch }) => {\n    const [showList, setShowList] = useState([]);\n    const [searchList, setSearchList] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setSearch(\"\");\n        API\n            .get(`/showList?genre=cartoon-list`)\n            .then(res => {\n                setShowList(res.data.result);\n                setSearchList(res.data.result);\n                setLoading(false);\n            })\n        return () => {\n            \n        };\n    }, []);\n\n    useEffect(() => {\n        const result = showList.filter(item => item.title.toLowerCase().includes(search.toLowerCase()));\n        setSearchList(result);\n        return () => {\n                \n        };\n    }, [search])\n    \n    return (\n        <div>\n            { loading ? \n                <div style={{margin:\"22%\"}}>\n                    <Spin />\n                </div> : \n                \n                <div>\n                    <List\n                        style={{backgroundColor:\"white\"}}\n                        bordered\n                        dataSource={search !== \"\" ? searchList : showList}\n                        renderItem={item => (\n                            <List.Item>\n                                <Link to={`/show/${item.link.split(\"https://www.wcostream.com/\")[1].split(\"anime/\")[1]}`}>\n                                    {item.title}\n                                </Link>\n                            </List.Item>\n                        )}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Cartoons\n","/Users/christianpickett/Documents/wco-cast/src/components/Dubbed.js",["53","54"],"/Users/christianpickett/Documents/wco-cast/src/components/Show.js",["55","56"],"import { List, Spin, Layout, Input } from 'antd';\nimport React, { useEffect, useState } from 'react'\nimport { Link, Route } from 'react-router-dom';\nimport API from '../api/api';\nimport Episode from './Episode';\n\nconst { Content } = Layout;\nconst { Search } = Input;\n\nconst Show = ({ search, setSearch }) => {\n    const [showList, setShowList] = useState([]);\n    const [searchList, setSearchList] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [showTitle, setShowTitle] = useState();\n    \n    useEffect(() => {\n        setSearch(\"\");\n        const params = window.location.pathname.split(\"/show/\")[1].split(\"/\");\n        const title = params[0];\n        setShowTitle(title);\n        API\n            .get(`/episodeList?genre=anime&title=${title}`)\n            .then(res => {\n                setShowList(res.data.result);\n                setSearchList(res.data.result);\n                setLoading(false);\n            }).catch(err => console.log(err));\n        \n        return () => {\n            \n        };\n    }, []);\n\n    useEffect(() => {\n        const result = showList.filter(item => item.title.toLowerCase().includes(search.toLowerCase()));\n        setSearchList(result);\n        return () => {\n                \n        };\n    }, [search]);\n    \n    return (\n        <>\n            <Route exact path=\"/show/:show/:title\">\n                <Episode showList={showList} />\n            </Route>\n            <Route exact path=\"/show/:show\">\n                <Search value={search} placeholder=\"search...\" enterButton onChange={e => setSearch(e.target.value)} onSearch={setSearch} />\n                <Content style={{ margin:\"0% auto 2% auto\"}}>\n                    <Content style={{ margin:\"auto\", overflow:\"scroll\", height:\"65vh\", width:\"70vw\", textDecoration:\"underline\" }}>\n                        { loading ? \n                            <div style={{margin:\"22%\"}}>\n                                <Spin />\n                            </div> : \n                            \n                            <div>\n                                <List\n                                    style={{backgroundColor:\"white\"}}\n                                    bordered\n                                    dataSource={search !== \"\" ? searchList : showList}\n                                    renderItem={item => (\n                                        <List.Item>\n                                            <Link to={`/show/${showTitle}/${item.link.split(\"https://www.wcostream.com/\")[1]}`}>\n                                                {item.title}\n                                            </Link>\n                                        </List.Item>\n                                    )}\n                                />\n                            </div>\n                        }\n                    </Content>\n                </Content>\n            </Route>\n        </>\n    )\n}\n\nexport default Show\n","/Users/christianpickett/Documents/wco-cast/src/components/Episode.js",[],"/Users/christianpickett/Documents/wco-cast/src/components/Subbed.js",["57","58"],"import { List, Spin } from 'antd';\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport API from '../api/api';\n\nconst Subbed = ({ search, setSearch }) => {\n    const [showList, setShowList] = useState([]);\n    const [searchList, setSearchList] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setSearch(\"\");\n        API\n            .get(`/showList?genre=subbed-anime-list`)\n            .then(res => {\n                setShowList(res.data.result);\n                setSearchList(res.data.result);\n                setLoading(false);\n            })\n        return () => {\n            \n        };\n    }, []);\n\n    useEffect(() => {\n        const result = showList.filter(item => item.title.toLowerCase().includes(search.toLowerCase()));\n        setSearchList(result);\n        return () => {\n                \n        };\n    }, [search])\n    \n    return (\n        <div>\n            { loading ? \n                <div style={{margin:\"22%\"}}>\n                    <Spin />\n                </div> : \n                \n                <div>\n                    <List\n                        style={{backgroundColor:\"white\"}}\n                        bordered\n                        dataSource={search !== \"\" ? searchList : showList}\n                        renderItem={item => (\n                            <List.Item>\n                                <Link to={`/show/${item.link.split(\"https://www.wcostream.com/\")[1].split(\"anime/\")[1]}`}>\n                                    {item.title}\n                                </Link>\n                            </List.Item>\n                        )}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Subbed\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"63"},{"ruleId":"61","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":23,"column":8,"nodeType":"67","endLine":23,"endColumn":10,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":31,"column":8,"nodeType":"67","endLine":31,"endColumn":16,"suggestions":"70"},{"ruleId":"65","severity":1,"message":"66","line":23,"column":8,"nodeType":"67","endLine":23,"endColumn":10,"suggestions":"71"},{"ruleId":"65","severity":1,"message":"69","line":31,"column":8,"nodeType":"67","endLine":31,"endColumn":16,"suggestions":"72"},{"ruleId":"65","severity":1,"message":"66","line":32,"column":8,"nodeType":"67","endLine":32,"endColumn":10,"suggestions":"73"},{"ruleId":"65","severity":1,"message":"69","line":40,"column":8,"nodeType":"67","endLine":40,"endColumn":16,"suggestions":"74"},{"ruleId":"65","severity":1,"message":"66","line":23,"column":8,"nodeType":"67","endLine":23,"endColumn":10,"suggestions":"75"},{"ruleId":"65","severity":1,"message":"69","line":31,"column":8,"nodeType":"67","endLine":31,"endColumn":16,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSearch'. Either include it or remove the dependency array. If 'setSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'showList'. Either include it or remove the dependency array.",["80"],["81"],["82"],["83"],["84"],["85"],["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"87","fix":"91"},{"desc":"89","fix":"92"},{"desc":"87","fix":"93"},{"desc":"89","fix":"94"},{"desc":"87","fix":"95"},{"desc":"89","fix":"96"},"Update the dependencies array to be: [setSearch]",{"range":"97","text":"98"},"Update the dependencies array to be: [search, showList]",{"range":"99","text":"100"},{"range":"101","text":"98"},{"range":"102","text":"100"},{"range":"103","text":"98"},{"range":"104","text":"100"},{"range":"105","text":"98"},{"range":"106","text":"100"},[690,692],"[setSearch]",[912,920],"[search, showList]",[693,695],[915,923],[1043,1045],[1265,1273],[693,695],[915,923]]